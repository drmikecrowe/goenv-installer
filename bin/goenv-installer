#!/bin/bash
set -e

homebrew=
type -p brew >/dev/null && homebrew=1

try_bash_extension() {
  if [ -x src/configure ]; then
    src/configure && make -C src || {
      echo "Optional bash extension failed to build, but things will still work normally."
    }
  fi
}

if ! type -p git >/dev/null; then
  git() {
    echo "Error: git is required to proceed. Please install git and try again." >&2
    exit 1
  }
fi

http() {
  local url="$1"
  if type -p curl >/dev/null; then
    curl -fsSL "$url"
  elif type -p wget >/dev/null; then
    wget -q "$url" -O-
  else
    echo "Error: couldn't download file. No \`curl' or \`wget' found." >&2
    return 1
  fi
}

goenv="$(command -v goenv ~/.goenv/bin/goenv | head -1)"

if [ -n "$goenv" ]; then
  echo "goenv already seems installed in \`$goenv'."
  cd "${goenv%/*}"

  if [ -x ./brew ]; then
    echo "Trying to update with Homebrew..."
    brew update >/dev/null
    if [ "$(./goenv --version)" < "1.0.0" ] && brew list goenv | grep -q goenv/HEAD; then
      brew uninstall goenv
      brew install goenv --without-go-build
    else
      brew upgrade goenv
    fi
  elif git remote -v 2>/dev/null | grep -q goenv; then
    echo "Trying to update with git..."
    git pull --tags origin master
    cd ..
    try_bash_extension
  fi
else
  if [ -n "$homebrew" ]; then
    echo "Installing goenv with Homebrew..."
    brew update
    brew install goenv --without-go-build
    goenv="$(brew --prefix)/bin/goenv"
  else
    echo "Installing goenv with git..."
    mkdir -p ~/.goenv
    cd ~/.goenv
    git init
    git remote add -f -t master origin https://github.com/syndbg/goenv.git
    git checkout -b master origin/master
    try_bash_extension
    goenv=~/.goenv/bin/goenv

    if [ ! -e versions ] && [ -w /opt/rubies ]; then
      ln -s /opt/rubies versions
    fi
  fi
fi

goenv_root="$("$goenv" root)"
go_build="$(command -v "$goenv_root"/plugins/*/bin/goenv-install goenv-install | head -1)"

echo
if [ -n "$go_build" ]; then
  echo "\`goenv install' command already available in \`$go_build'."
  cd "${go_build%/*}"

  if [ -x ./brew ]; then
    echo "Trying to update with Homebrew..."
    brew update >/dev/null
    brew upgrade go-build
  elif git remote -v 2>/dev/null | grep -q go-build; then
    echo "Trying to update with git..."
    git pull origin master
  fi
else
  if [ -n "$homebrew" ]; then
    echo "Installing go-build with Homebrew..."
    brew update
    brew install go-build
  else
    echo "Installing go-build with git..."
    mkdir -p "${goenv_root}/plugins"
    git clone https://github.com/goenv/go-build.git "${goenv_root}/plugins/go-build"
  fi
fi

# Enable caching of goenv-install downloads
mkdir -p "${goenv_root}/cache"

echo
echo "Running doctor script to verify installation..."
http https://github.com/syndbg/goenv-installer/raw/master/bin/goenv-doctor | "$BASH"

echo
echo "All done!"
echo "Note that this installer doesn't yet configure your shell startup files:"
i=0
if [ -x ~/.goenv/bin ]; then
  echo "$((++i)). You'll want to ensure that \`~/.goenv/bin' is added to PATH."
fi
echo "$((++i)). Run \`goenv init' to see instructions how to configure goenv for your shell."
echo "$((++i)). Launch a new terminal window to verify that the configuration is correct."
echo
